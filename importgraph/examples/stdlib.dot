
digraph Imports {
   size="12.8"
   overlap=false
   ratio=fill
   rankdir=LR
   "archive/tar" -> "bytes"
   "archive/tar" -> "errors"
   "archive/tar" -> "fmt"
   "archive/tar" -> "io"
   "archive/tar" -> "io/ioutil"
   "archive/tar" -> "os"
   "archive/tar" -> "strconv"
   "archive/tar" -> "syscall"
   "archive/tar" -> "time"
   "archive/zip" -> "bufio"
   "archive/zip" -> "compress/flate"
   "archive/zip" -> "encoding/binary"
   "archive/zip" -> "errors"
   "archive/zip" -> "hash"
   "archive/zip" -> "hash/crc32"
   "archive/zip" -> "io"
   "archive/zip" -> "io/ioutil"
   "archive/zip" -> "os"
   "archive/zip" -> "time"
   "bufio" -> "bytes"
   "bufio" -> "errors"
   "bufio" -> "io"
   "bufio" -> "unicode/utf8"
   "bytes" -> "errors"
   "bytes" -> "io"
   "bytes" -> "unicode"
   "bytes" -> "unicode/utf8"
   "compress/bzip2" -> "bufio"
   "compress/bzip2" -> "io"
   "compress/bzip2" -> "sort"
   "compress/flate" -> "bufio"
   "compress/flate" -> "fmt"
   "compress/flate" -> "io"
   "compress/flate" -> "math"
   "compress/flate" -> "sort"
   "compress/flate" -> "strconv"
   "compress/gzip" -> "bufio"
   "compress/gzip" -> "compress/flate"
   "compress/gzip" -> "errors"
   "compress/gzip" -> "fmt"
   "compress/gzip" -> "hash"
   "compress/gzip" -> "hash/crc32"
   "compress/gzip" -> "io"
   "compress/gzip" -> "time"
   "compress/lzw" -> "bufio"
   "compress/lzw" -> "errors"
   "compress/lzw" -> "fmt"
   "compress/lzw" -> "io"
   "compress/zlib" -> "bufio"
   "compress/zlib" -> "compress/flate"
   "compress/zlib" -> "errors"
   "compress/zlib" -> "fmt"
   "compress/zlib" -> "hash"
   "compress/zlib" -> "hash/adler32"
   "compress/zlib" -> "io"
   "container/heap" -> "sort"
   "crypto" -> "hash"
   "crypto/aes" -> "crypto/cipher"
   "crypto/aes" -> "strconv"
   "crypto/cipher" -> "io"
   "crypto/des" -> "crypto/cipher"
   "crypto/des" -> "encoding/binary"
   "crypto/des" -> "strconv"
   "crypto/dsa" -> "errors"
   "crypto/dsa" -> "io"
   "crypto/dsa" -> "math/big"
   "crypto/ecdsa" -> "crypto/elliptic"
   "crypto/ecdsa" -> "io"
   "crypto/ecdsa" -> "math/big"
   "crypto/elliptic" -> "io"
   "crypto/elliptic" -> "math/big"
   "crypto/elliptic" -> "sync"
   "crypto/hmac" -> "crypto/subtle"
   "crypto/hmac" -> "hash"
   "crypto/md5" -> "crypto"
   "crypto/md5" -> "hash"
   "crypto/md5" -> "runtime"
   "crypto/md5" -> "unsafe"
   "crypto/rand" -> "bufio"
   "crypto/rand" -> "crypto/aes"
   "crypto/rand" -> "crypto/cipher"
   "crypto/rand" -> "errors"
   "crypto/rand" -> "io"
   "crypto/rand" -> "math/big"
   "crypto/rand" -> "os"
   "crypto/rand" -> "runtime"
   "crypto/rand" -> "sync"
   "crypto/rand" -> "time"
   "crypto/rc4" -> "strconv"
   "crypto/rsa" -> "crypto"
   "crypto/rsa" -> "crypto/rand"
   "crypto/rsa" -> "crypto/subtle"
   "crypto/rsa" -> "errors"
   "crypto/rsa" -> "hash"
   "crypto/rsa" -> "io"
   "crypto/rsa" -> "math/big"
   "crypto/sha1" -> "crypto"
   "crypto/sha1" -> "hash"
   "crypto/sha256" -> "crypto"
   "crypto/sha256" -> "hash"
   "crypto/sha512" -> "crypto"
   "crypto/sha512" -> "hash"
   "crypto/tls" -> "bytes"
   "crypto/tls" -> "crypto"
   "crypto/tls" -> "crypto/aes"
   "crypto/tls" -> "crypto/cipher"
   "crypto/tls" -> "crypto/des"
   "crypto/tls" -> "crypto/ecdsa"
   "crypto/tls" -> "crypto/elliptic"
   "crypto/tls" -> "crypto/hmac"
   "crypto/tls" -> "crypto/md5"
   "crypto/tls" -> "crypto/rand"
   "crypto/tls" -> "crypto/rc4"
   "crypto/tls" -> "crypto/rsa"
   "crypto/tls" -> "crypto/sha1"
   "crypto/tls" -> "crypto/sha256"
   "crypto/tls" -> "crypto/subtle"
   "crypto/tls" -> "crypto/x509"
   "crypto/tls" -> "encoding/pem"
   "crypto/tls" -> "errors"
   "crypto/tls" -> "hash"
   "crypto/tls" -> "io"
   "crypto/tls" -> "io/ioutil"
   "crypto/tls" -> "math/big"
   "crypto/tls" -> "net"
   "crypto/tls" -> "strconv"
   "crypto/tls" -> "strings"
   "crypto/tls" -> "sync"
   "crypto/tls" -> "time"
   "crypto/x509" -> "bytes"
   "crypto/x509" -> "crypto"
   "crypto/x509" -> "crypto/aes"
   "crypto/x509" -> "crypto/cipher"
   "crypto/x509" -> "crypto/des"
   "crypto/x509" -> "crypto/dsa"
   "crypto/x509" -> "crypto/ecdsa"
   "crypto/x509" -> "crypto/elliptic"
   "crypto/x509" -> "crypto/md5"
   "crypto/x509" -> "crypto/rsa"
   "crypto/x509" -> "crypto/sha1"
   "crypto/x509" -> "crypto/x509/pkix"
   "crypto/x509" -> "encoding/asn1"
   "crypto/x509" -> "encoding/hex"
   "crypto/x509" -> "encoding/pem"
   "crypto/x509" -> "errors"
   "crypto/x509" -> "fmt"
   "crypto/x509" -> "io"
   "crypto/x509" -> "io/ioutil"
   "crypto/x509" -> "math/big"
   "crypto/x509" -> "runtime"
   "crypto/x509" -> "strings"
   "crypto/x509" -> "sync"
   "crypto/x509" -> "time"
   "crypto/x509" -> "unicode/utf8"
   "crypto/x509/pkix" -> "encoding/asn1"
   "crypto/x509/pkix" -> "math/big"
   "crypto/x509/pkix" -> "time"
   "database/sql" -> "database/sql/driver"
   "database/sql" -> "errors"
   "database/sql" -> "fmt"
   "database/sql" -> "io"
   "database/sql" -> "reflect"
   "database/sql" -> "strconv"
   "database/sql" -> "sync"
   "database/sql/driver" -> "errors"
   "database/sql/driver" -> "fmt"
   "database/sql/driver" -> "reflect"
   "database/sql/driver" -> "strconv"
   "database/sql/driver" -> "time"
   "debug/dwarf" -> "encoding/binary"
   "debug/dwarf" -> "errors"
   "debug/dwarf" -> "strconv"
   "debug/elf" -> "bytes"
   "debug/elf" -> "debug/dwarf"
   "debug/elf" -> "encoding/binary"
   "debug/elf" -> "errors"
   "debug/elf" -> "fmt"
   "debug/elf" -> "io"
   "debug/elf" -> "os"
   "debug/elf" -> "strconv"
   "debug/gosym" -> "encoding/binary"
   "debug/gosym" -> "fmt"
   "debug/gosym" -> "strconv"
   "debug/gosym" -> "strings"
   "debug/macho" -> "bytes"
   "debug/macho" -> "debug/dwarf"
   "debug/macho" -> "encoding/binary"
   "debug/macho" -> "errors"
   "debug/macho" -> "fmt"
   "debug/macho" -> "io"
   "debug/macho" -> "os"
   "debug/macho" -> "strconv"
   "debug/pe" -> "debug/dwarf"
   "debug/pe" -> "encoding/binary"
   "debug/pe" -> "errors"
   "debug/pe" -> "fmt"
   "debug/pe" -> "io"
   "debug/pe" -> "os"
   "debug/pe" -> "strconv"
   "encoding/ascii85" -> "io"
   "encoding/ascii85" -> "strconv"
   "encoding/asn1" -> "bytes"
   "encoding/asn1" -> "errors"
   "encoding/asn1" -> "fmt"
   "encoding/asn1" -> "io"
   "encoding/asn1" -> "math/big"
   "encoding/asn1" -> "reflect"
   "encoding/asn1" -> "strconv"
   "encoding/asn1" -> "strings"
   "encoding/asn1" -> "time"
   "encoding/asn1" -> "unicode/utf8"
   "encoding/base32" -> "io"
   "encoding/base32" -> "strconv"
   "encoding/base64" -> "io"
   "encoding/base64" -> "strconv"
   "encoding/binary" -> "errors"
   "encoding/binary" -> "io"
   "encoding/binary" -> "math"
   "encoding/binary" -> "reflect"
   "encoding/csv" -> "bufio"
   "encoding/csv" -> "bytes"
   "encoding/csv" -> "errors"
   "encoding/csv" -> "fmt"
   "encoding/csv" -> "io"
   "encoding/csv" -> "strings"
   "encoding/csv" -> "unicode"
   "encoding/csv" -> "unicode/utf8"
   "encoding/gob" -> "bufio"
   "encoding/gob" -> "bytes"
   "encoding/gob" -> "errors"
   "encoding/gob" -> "fmt"
   "encoding/gob" -> "io"
   "encoding/gob" -> "math"
   "encoding/gob" -> "os"
   "encoding/gob" -> "reflect"
   "encoding/gob" -> "sync"
   "encoding/gob" -> "unicode"
   "encoding/gob" -> "unicode/utf8"
   "encoding/gob" -> "unsafe"
   "encoding/hex" -> "bytes"
   "encoding/hex" -> "errors"
   "encoding/hex" -> "fmt"
   "encoding/hex" -> "io"
   "encoding/json" -> "bytes"
   "encoding/json" -> "encoding/base64"
   "encoding/json" -> "errors"
   "encoding/json" -> "fmt"
   "encoding/json" -> "io"
   "encoding/json" -> "math"
   "encoding/json" -> "reflect"
   "encoding/json" -> "runtime"
   "encoding/json" -> "sort"
   "encoding/json" -> "strconv"
   "encoding/json" -> "strings"
   "encoding/json" -> "sync"
   "encoding/json" -> "unicode"
   "encoding/json" -> "unicode/utf16"
   "encoding/json" -> "unicode/utf8"
   "encoding/pem" -> "bytes"
   "encoding/pem" -> "encoding/base64"
   "encoding/pem" -> "io"
   "encoding/pem" -> "sort"
   "encoding/xml" -> "bufio"
   "encoding/xml" -> "bytes"
   "encoding/xml" -> "errors"
   "encoding/xml" -> "fmt"
   "encoding/xml" -> "io"
   "encoding/xml" -> "reflect"
   "encoding/xml" -> "strconv"
   "encoding/xml" -> "strings"
   "encoding/xml" -> "sync"
   "encoding/xml" -> "time"
   "encoding/xml" -> "unicode"
   "encoding/xml" -> "unicode/utf8"
   "exp/cookiejar" -> "net/http"
   "exp/cookiejar" -> "net/url"
   "exp/cookiejar" -> "time"
   "exp/ebnf" -> "errors"
   "exp/ebnf" -> "fmt"
   "exp/ebnf" -> "io"
   "exp/ebnf" -> "strconv"
   "exp/ebnf" -> "text/scanner"
   "exp/ebnf" -> "unicode"
   "exp/ebnf" -> "unicode/utf8"
   "exp/ebnflint" -> "bytes"
   "exp/ebnflint" -> "exp/ebnf"
   "exp/ebnflint" -> "flag"
   "exp/ebnflint" -> "fmt"
   "exp/ebnflint" -> "go/scanner"
   "exp/ebnflint" -> "go/token"
   "exp/ebnflint" -> "io"
   "exp/ebnflint" -> "io/ioutil"
   "exp/ebnflint" -> "os"
   "exp/ebnflint" -> "path/filepath"
   "exp/gotype" -> "errors"
   "exp/gotype" -> "exp/types"
   "exp/gotype" -> "flag"
   "exp/gotype" -> "fmt"
   "exp/gotype" -> "go/ast"
   "exp/gotype" -> "go/parser"
   "exp/gotype" -> "go/scanner"
   "exp/gotype" -> "go/token"
   "exp/gotype" -> "io/ioutil"
   "exp/gotype" -> "os"
   "exp/gotype" -> "path/filepath"
   "exp/gotype" -> "strings"
   "exp/html" -> "bufio"
   "exp/html" -> "bytes"
   "exp/html" -> "errors"
   "exp/html" -> "exp/html/atom"
   "exp/html" -> "fmt"
   "exp/html" -> "io"
   "exp/html" -> "strconv"
   "exp/html" -> "strings"
   "exp/html" -> "unicode/utf8"
   "exp/inotify" -> "errors"
   "exp/inotify" -> "fmt"
   "exp/inotify" -> "os"
   "exp/inotify" -> "strings"
   "exp/inotify" -> "sync"
   "exp/inotify" -> "syscall"
   "exp/inotify" -> "unsafe"
   "exp/locale/collate" -> "bytes"
   "exp/locale/collate" -> "exp/norm"
   "exp/locale/collate" -> "unicode"
   "exp/locale/collate" -> "unicode/utf8"
   "exp/locale/collate/build" -> "exp/locale/collate"
   "exp/locale/collate/build" -> "exp/norm"
   "exp/locale/collate/build" -> "fmt"
   "exp/locale/collate/build" -> "hash/fnv"
   "exp/locale/collate/build" -> "io"
   "exp/locale/collate/build" -> "log"
   "exp/locale/collate/build" -> "reflect"
   "exp/locale/collate/build" -> "sort"
   "exp/locale/collate/build" -> "strings"
   "exp/locale/collate/build" -> "unicode"
   "exp/locale/collate/build" -> "unicode/utf8"
   "exp/locale/collate/tools/colcmp" -> "bytes"
   "exp/locale/collate/tools/colcmp" -> "exp/locale/collate"
   "exp/locale/collate/tools/colcmp" -> "exp/norm"
   "exp/locale/collate/tools/colcmp" -> "flag"
   "exp/locale/collate/tools/colcmp" -> "fmt"
   "exp/locale/collate/tools/colcmp" -> "io"
   "exp/locale/collate/tools/colcmp" -> "log"
   "exp/locale/collate/tools/colcmp" -> "math"
   "exp/locale/collate/tools/colcmp" -> "math/rand"
   "exp/locale/collate/tools/colcmp" -> "os"
   "exp/locale/collate/tools/colcmp" -> "runtime/pprof"
   "exp/locale/collate/tools/colcmp" -> "sort"
   "exp/locale/collate/tools/colcmp" -> "strconv"
   "exp/locale/collate/tools/colcmp" -> "strings"
   "exp/locale/collate/tools/colcmp" -> "text/template"
   "exp/locale/collate/tools/colcmp" -> "time"
   "exp/locale/collate/tools/colcmp" -> "unicode"
   "exp/locale/collate/tools/colcmp" -> "unicode/utf16"
   "exp/locale/collate/tools/colcmp" -> "unicode/utf8"
   "exp/norm" -> "io"
   "exp/norm" -> "unicode/utf8"
   "exp/types" -> "bufio"
   "exp/types" -> "bytes"
   "exp/types" -> "errors"
   "exp/types" -> "fmt"
   "exp/types" -> "go/ast"
   "exp/types" -> "go/build"
   "exp/types" -> "go/token"
   "exp/types" -> "io"
   "exp/types" -> "math/big"
   "exp/types" -> "os"
   "exp/types" -> "path/filepath"
   "exp/types" -> "sort"
   "exp/types" -> "strconv"
   "exp/types" -> "strings"
   "exp/types" -> "text/scanner"
   "exp/types/testdata" -> "go/ast"
   "exp/utf8string" -> "errors"
   "exp/utf8string" -> "unicode/utf8"
   "expvar" -> "bytes"
   "expvar" -> "encoding/json"
   "expvar" -> "fmt"
   "expvar" -> "log"
   "expvar" -> "net/http"
   "expvar" -> "os"
   "expvar" -> "runtime"
   "expvar" -> "strconv"
   "expvar" -> "sync"
   "flag" -> "errors"
   "flag" -> "fmt"
   "flag" -> "io"
   "flag" -> "os"
   "flag" -> "sort"
   "flag" -> "strconv"
   "flag" -> "time"
   "fmt" -> "errors"
   "fmt" -> "io"
   "fmt" -> "math"
   "fmt" -> "os"
   "fmt" -> "reflect"
   "fmt" -> "strconv"
   "fmt" -> "sync"
   "fmt" -> "unicode/utf8"
   "go/ast" -> "bytes"
   "go/ast" -> "fmt"
   "go/ast" -> "go/scanner"
   "go/ast" -> "go/token"
   "go/ast" -> "io"
   "go/ast" -> "os"
   "go/ast" -> "reflect"
   "go/ast" -> "sort"
   "go/ast" -> "strconv"
   "go/ast" -> "strings"
   "go/ast" -> "unicode"
   "go/ast" -> "unicode/utf8"
   "go/build" -> "bufio"
   "go/build" -> "bytes"
   "go/build" -> "errors"
   "go/build" -> "fmt"
   "go/build" -> "go/ast"
   "go/build" -> "go/doc"
   "go/build" -> "go/parser"
   "go/build" -> "go/token"
   "go/build" -> "io"
   "go/build" -> "io/ioutil"
   "go/build" -> "log"
   "go/build" -> "os"
   "go/build" -> "path"
   "go/build" -> "path/filepath"
   "go/build" -> "runtime"
   "go/build" -> "sort"
   "go/build" -> "strconv"
   "go/build" -> "strings"
   "go/build" -> "unicode"
   "go/build/testdata/other" -> "./file"
   "go/doc" -> "go/ast"
   "go/doc" -> "go/token"
   "go/doc" -> "io"
   "go/doc" -> "path"
   "go/doc" -> "regexp"
   "go/doc" -> "sort"
   "go/doc" -> "strconv"
   "go/doc" -> "strings"
   "go/doc" -> "text/template"
   "go/doc" -> "unicode"
   "go/doc" -> "unicode/utf8"
   "go/format" -> "bytes"
   "go/format" -> "fmt"
   "go/format" -> "go/ast"
   "go/format" -> "go/parser"
   "go/format" -> "go/printer"
   "go/format" -> "go/token"
   "go/format" -> "io"
   "go/format" -> "strings"
   "go/parser" -> "bytes"
   "go/parser" -> "errors"
   "go/parser" -> "fmt"
   "go/parser" -> "go/ast"
   "go/parser" -> "go/scanner"
   "go/parser" -> "go/token"
   "go/parser" -> "io"
   "go/parser" -> "io/ioutil"
   "go/parser" -> "os"
   "go/parser" -> "path/filepath"
   "go/parser" -> "strconv"
   "go/parser" -> "strings"
   "go/parser" -> "unicode"
   "go/printer" -> "bytes"
   "go/printer" -> "fmt"
   "go/printer" -> "go/ast"
   "go/printer" -> "go/token"
   "go/printer" -> "io"
   "go/printer" -> "os"
   "go/printer" -> "strconv"
   "go/printer" -> "strings"
   "go/printer" -> "text/tabwriter"
   "go/printer" -> "unicode"
   "go/printer" -> "unicode/utf8"
   "go/printer/testdata" -> "fmt"
   "go/printer/testdata" -> "go/ast"
   "go/printer/testdata" -> "go/scanner"
   "go/printer/testdata" -> "go/token"
   "go/scanner" -> "bytes"
   "go/scanner" -> "fmt"
   "go/scanner" -> "go/token"
   "go/scanner" -> "io"
   "go/scanner" -> "path/filepath"
   "go/scanner" -> "sort"
   "go/scanner" -> "strconv"
   "go/scanner" -> "unicode"
   "go/scanner" -> "unicode/utf8"
   "go/token" -> "fmt"
   "go/token" -> "sort"
   "go/token" -> "strconv"
   "go/token" -> "sync"
   "hash" -> "io"
   "hash/adler32" -> "hash"
   "hash/crc32" -> "hash"
   "hash/crc32" -> "sync"
   "hash/crc64" -> "hash"
   "hash/fnv" -> "hash"
   "html" -> "bytes"
   "html" -> "strings"
   "html" -> "unicode/utf8"
   "html/template" -> "bytes"
   "html/template" -> "encoding/json"
   "html/template" -> "fmt"
   "html/template" -> "html"
   "html/template" -> "io"
   "html/template" -> "io/ioutil"
   "html/template" -> "path/filepath"
   "html/template" -> "reflect"
   "html/template" -> "strings"
   "html/template" -> "sync"
   "html/template" -> "text/template"
   "html/template" -> "text/template/parse"
   "html/template" -> "unicode"
   "html/template" -> "unicode/utf8"
   "image" -> "bufio"
   "image" -> "errors"
   "image" -> "image/color"
   "image" -> "io"
   "image" -> "strconv"
   "image/draw" -> "image"
   "image/draw" -> "image/color"
   "image/gif" -> "bufio"
   "image/gif" -> "compress/lzw"
   "image/gif" -> "errors"
   "image/gif" -> "fmt"
   "image/gif" -> "image"
   "image/gif" -> "image/color"
   "image/gif" -> "io"
   "image/jpeg" -> "bufio"
   "image/jpeg" -> "errors"
   "image/jpeg" -> "image"
   "image/jpeg" -> "image/color"
   "image/jpeg" -> "io"
   "image/png" -> "bufio"
   "image/png" -> "compress/zlib"
   "image/png" -> "encoding/binary"
   "image/png" -> "fmt"
   "image/png" -> "hash"
   "image/png" -> "hash/crc32"
   "image/png" -> "image"
   "image/png" -> "image/color"
   "image/png" -> "io"
   "image/png" -> "strconv"
   "index/suffixarray" -> "bytes"
   "index/suffixarray" -> "encoding/binary"
   "index/suffixarray" -> "io"
   "index/suffixarray" -> "regexp"
   "index/suffixarray" -> "sort"
   "io" -> "errors"
   "io" -> "sync"
   "io/ioutil" -> "bytes"
   "io/ioutil" -> "io"
   "io/ioutil" -> "os"
   "io/ioutil" -> "path/filepath"
   "io/ioutil" -> "sort"
   "io/ioutil" -> "strconv"
   "io/ioutil" -> "sync"
   "io/ioutil" -> "time"
   "log" -> "fmt"
   "log" -> "io"
   "log" -> "os"
   "log" -> "runtime"
   "log" -> "sync"
   "log" -> "time"
   "log/syslog" -> "errors"
   "log/syslog" -> "fmt"
   "log/syslog" -> "log"
   "log/syslog" -> "net"
   "log/syslog" -> "os"
   "log/syslog" -> "time"
   "math" -> "unsafe"
   "math/big" -> "encoding/binary"
   "math/big" -> "errors"
   "math/big" -> "fmt"
   "math/big" -> "io"
   "math/big" -> "math"
   "math/big" -> "math/rand"
   "math/big" -> "strings"
   "math/big" -> "sync"
   "math/cmplx" -> "math"
   "math/rand" -> "math"
   "math/rand" -> "sync"
   "mime" -> "bufio"
   "mime" -> "bytes"
   "mime" -> "errors"
   "mime" -> "fmt"
   "mime" -> "os"
   "mime" -> "strings"
   "mime" -> "sync"
   "mime" -> "unicode"
   "mime/multipart" -> "bufio"
   "mime/multipart" -> "bytes"
   "mime/multipart" -> "crypto/rand"
   "mime/multipart" -> "errors"
   "mime/multipart" -> "fmt"
   "mime/multipart" -> "io"
   "mime/multipart" -> "io/ioutil"
   "mime/multipart" -> "mime"
   "mime/multipart" -> "net/textproto"
   "mime/multipart" -> "os"
   "mime/multipart" -> "strings"
   "net" -> "C"
   "net" -> "errors"
   "net" -> "io"
   "net" -> "math/rand"
   "net" -> "os"
   "net" -> "runtime"
   "net" -> "sort"
   "net" -> "sync"
   "net" -> "syscall"
   "net" -> "time"
   "net" -> "unsafe"
   "net/http" -> "bufio"
   "net/http" -> "bytes"
   "net/http" -> "compress/gzip"
   "net/http" -> "crypto/tls"
   "net/http" -> "encoding/base64"
   "net/http" -> "encoding/binary"
   "net/http" -> "errors"
   "net/http" -> "fmt"
   "net/http" -> "io"
   "net/http" -> "io/ioutil"
   "net/http" -> "log"
   "net/http" -> "mime"
   "net/http" -> "mime/multipart"
   "net/http" -> "net"
   "net/http" -> "net/textproto"
   "net/http" -> "net/url"
   "net/http" -> "os"
   "net/http" -> "path"
   "net/http" -> "path/filepath"
   "net/http" -> "runtime"
   "net/http" -> "sort"
   "net/http" -> "strconv"
   "net/http" -> "strings"
   "net/http" -> "sync"
   "net/http" -> "time"
   "net/http/cgi" -> "bufio"
   "net/http/cgi" -> "crypto/tls"
   "net/http/cgi" -> "errors"
   "net/http/cgi" -> "fmt"
   "net/http/cgi" -> "io"
   "net/http/cgi" -> "io/ioutil"
   "net/http/cgi" -> "log"
   "net/http/cgi" -> "net"
   "net/http/cgi" -> "net/http"
   "net/http/cgi" -> "net/url"
   "net/http/cgi" -> "os"
   "net/http/cgi" -> "os/exec"
   "net/http/cgi" -> "path/filepath"
   "net/http/cgi" -> "regexp"
   "net/http/cgi" -> "runtime"
   "net/http/cgi" -> "strconv"
   "net/http/cgi" -> "strings"
   "net/http/fcgi" -> "bufio"
   "net/http/fcgi" -> "bytes"
   "net/http/fcgi" -> "encoding/binary"
   "net/http/fcgi" -> "errors"
   "net/http/fcgi" -> "fmt"
   "net/http/fcgi" -> "io"
   "net/http/fcgi" -> "net"
   "net/http/fcgi" -> "net/http"
   "net/http/fcgi" -> "net/http/cgi"
   "net/http/fcgi" -> "os"
   "net/http/fcgi" -> "sync"
   "net/http/fcgi" -> "time"
   "net/http/httptest" -> "bytes"
   "net/http/httptest" -> "crypto/tls"
   "net/http/httptest" -> "flag"
   "net/http/httptest" -> "fmt"
   "net/http/httptest" -> "net"
   "net/http/httptest" -> "net/http"
   "net/http/httptest" -> "os"
   "net/http/httptest" -> "sync"
   "net/http/httputil" -> "bufio"
   "net/http/httputil" -> "bytes"
   "net/http/httputil" -> "errors"
   "net/http/httputil" -> "fmt"
   "net/http/httputil" -> "io"
   "net/http/httputil" -> "io/ioutil"
   "net/http/httputil" -> "log"
   "net/http/httputil" -> "net"
   "net/http/httputil" -> "net/http"
   "net/http/httputil" -> "net/textproto"
   "net/http/httputil" -> "net/url"
   "net/http/httputil" -> "strings"
   "net/http/httputil" -> "sync"
   "net/http/httputil" -> "time"
   "net/http/pprof" -> "bufio"
   "net/http/pprof" -> "bytes"
   "net/http/pprof" -> "fmt"
   "net/http/pprof" -> "html/template"
   "net/http/pprof" -> "io"
   "net/http/pprof" -> "log"
   "net/http/pprof" -> "net/http"
   "net/http/pprof" -> "os"
   "net/http/pprof" -> "runtime"
   "net/http/pprof" -> "runtime/pprof"
   "net/http/pprof" -> "strconv"
   "net/http/pprof" -> "strings"
   "net/http/pprof" -> "time"
   "net/mail" -> "bufio"
   "net/mail" -> "bytes"
   "net/mail" -> "encoding/base64"
   "net/mail" -> "errors"
   "net/mail" -> "fmt"
   "net/mail" -> "io"
   "net/mail" -> "io/ioutil"
   "net/mail" -> "log"
   "net/mail" -> "net/textproto"
   "net/mail" -> "strconv"
   "net/mail" -> "strings"
   "net/mail" -> "time"
   "net/rpc" -> "bufio"
   "net/rpc" -> "encoding/gob"
   "net/rpc" -> "errors"
   "net/rpc" -> "fmt"
   "net/rpc" -> "io"
   "net/rpc" -> "log"
   "net/rpc" -> "net"
   "net/rpc" -> "net/http"
   "net/rpc" -> "reflect"
   "net/rpc" -> "sort"
   "net/rpc" -> "strings"
   "net/rpc" -> "sync"
   "net/rpc" -> "text/template"
   "net/rpc" -> "unicode"
   "net/rpc" -> "unicode/utf8"
   "net/rpc/jsonrpc" -> "encoding/json"
   "net/rpc/jsonrpc" -> "errors"
   "net/rpc/jsonrpc" -> "fmt"
   "net/rpc/jsonrpc" -> "io"
   "net/rpc/jsonrpc" -> "net"
   "net/rpc/jsonrpc" -> "net/rpc"
   "net/rpc/jsonrpc" -> "sync"
   "net/smtp" -> "crypto/hmac"
   "net/smtp" -> "crypto/md5"
   "net/smtp" -> "crypto/tls"
   "net/smtp" -> "encoding/base64"
   "net/smtp" -> "errors"
   "net/smtp" -> "fmt"
   "net/smtp" -> "io"
   "net/smtp" -> "net"
   "net/smtp" -> "net/textproto"
   "net/smtp" -> "strings"
   "net/textproto" -> "bufio"
   "net/textproto" -> "bytes"
   "net/textproto" -> "fmt"
   "net/textproto" -> "io"
   "net/textproto" -> "io/ioutil"
   "net/textproto" -> "net"
   "net/textproto" -> "strconv"
   "net/textproto" -> "strings"
   "net/textproto" -> "sync"
   "net/url" -> "bytes"
   "net/url" -> "errors"
   "net/url" -> "sort"
   "net/url" -> "strconv"
   "net/url" -> "strings"
   "old/netchan" -> "encoding/gob"
   "old/netchan" -> "errors"
   "old/netchan" -> "io"
   "old/netchan" -> "log"
   "old/netchan" -> "net"
   "old/netchan" -> "reflect"
   "old/netchan" -> "strconv"
   "old/netchan" -> "sync"
   "old/netchan" -> "time"
   "os" -> "errors"
   "os" -> "io"
   "os" -> "runtime"
   "os" -> "sync/atomic"
   "os" -> "syscall"
   "os" -> "time"
   "os/exec" -> "bytes"
   "os/exec" -> "errors"
   "os/exec" -> "io"
   "os/exec" -> "os"
   "os/exec" -> "strconv"
   "os/exec" -> "strings"
   "os/exec" -> "syscall"
   "os/signal" -> "os"
   "os/signal" -> "sync"
   "os/signal" -> "syscall"
   "os/user" -> "C"
   "os/user" -> "fmt"
   "os/user" -> "runtime"
   "os/user" -> "strconv"
   "os/user" -> "strings"
   "os/user" -> "syscall"
   "os/user" -> "unsafe"
   "path" -> "errors"
   "path" -> "strings"
   "path" -> "unicode/utf8"
   "path/filepath" -> "bytes"
   "path/filepath" -> "errors"
   "path/filepath" -> "os"
   "path/filepath" -> "runtime"
   "path/filepath" -> "sort"
   "path/filepath" -> "strings"
   "path/filepath" -> "unicode/utf8"
   "reflect" -> "math"
   "reflect" -> "runtime"
   "reflect" -> "strconv"
   "reflect" -> "sync"
   "reflect" -> "unsafe"
   "regexp" -> "bytes"
   "regexp" -> "io"
   "regexp" -> "regexp/syntax"
   "regexp" -> "strconv"
   "regexp" -> "strings"
   "regexp" -> "sync"
   "regexp" -> "unicode"
   "regexp" -> "unicode/utf8"
   "regexp/syntax" -> "bytes"
   "regexp/syntax" -> "sort"
   "regexp/syntax" -> "strconv"
   "regexp/syntax" -> "strings"
   "regexp/syntax" -> "unicode"
   "regexp/syntax" -> "unicode/utf8"
   "runtime" -> "unsafe"
   "runtime/cgo" -> "C"
   "runtime/debug" -> "bytes"
   "runtime/debug" -> "fmt"
   "runtime/debug" -> "io/ioutil"
   "runtime/debug" -> "os"
   "runtime/debug" -> "runtime"
   "runtime/pprof" -> "bufio"
   "runtime/pprof" -> "bytes"
   "runtime/pprof" -> "fmt"
   "runtime/pprof" -> "io"
   "runtime/pprof" -> "runtime"
   "runtime/pprof" -> "sort"
   "runtime/pprof" -> "strings"
   "runtime/pprof" -> "sync"
   "runtime/pprof" -> "text/tabwriter"
   "sort" -> "math"
   "strconv" -> "errors"
   "strconv" -> "math"
   "strconv" -> "unicode/utf8"
   "strings" -> "errors"
   "strings" -> "io"
   "strings" -> "unicode"
   "strings" -> "unicode/utf8"
   "sync" -> "sync/atomic"
   "sync" -> "unsafe"
   "sync/atomic" -> "unsafe"
   "syscall" -> "runtime"
   "syscall" -> "sync"
   "syscall" -> "unsafe"
   "testing" -> "bytes"
   "testing" -> "flag"
   "testing" -> "fmt"
   "testing" -> "io"
   "testing" -> "os"
   "testing" -> "runtime"
   "testing" -> "runtime/pprof"
   "testing" -> "strconv"
   "testing" -> "strings"
   "testing" -> "sync"
   "testing" -> "time"
   "testing/iotest" -> "errors"
   "testing/iotest" -> "io"
   "testing/iotest" -> "log"
   "testing/quick" -> "flag"
   "testing/quick" -> "fmt"
   "testing/quick" -> "math"
   "testing/quick" -> "math/rand"
   "testing/quick" -> "reflect"
   "testing/quick" -> "strings"
   "text/scanner" -> "bytes"
   "text/scanner" -> "fmt"
   "text/scanner" -> "io"
   "text/scanner" -> "os"
   "text/scanner" -> "unicode"
   "text/scanner" -> "unicode/utf8"
   "text/tabwriter" -> "bytes"
   "text/tabwriter" -> "io"
   "text/tabwriter" -> "unicode/utf8"
   "text/template" -> "bytes"
   "text/template" -> "fmt"
   "text/template" -> "io"
   "text/template" -> "io/ioutil"
   "text/template" -> "net/url"
   "text/template" -> "path/filepath"
   "text/template" -> "reflect"
   "text/template" -> "runtime"
   "text/template" -> "sort"
   "text/template" -> "strings"
   "text/template" -> "text/template/parse"
   "text/template" -> "unicode"
   "text/template" -> "unicode/utf8"
   "text/template/parse" -> "bytes"
   "text/template/parse" -> "fmt"
   "text/template/parse" -> "runtime"
   "text/template/parse" -> "strconv"
   "text/template/parse" -> "strings"
   "text/template/parse" -> "unicode"
   "text/template/parse" -> "unicode/utf8"
   "time" -> "errors"
   "time" -> "runtime"
   "time" -> "sync"
   "time" -> "syscall"

}
